// Generated by Dagger (https://dagger.dev).
package com.superapp.tingtongapp.composetutorial;

import com.superapp.tingtongapp.composetutorial.network.ApiInterface;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Repository_Factory implements Factory<Repository> {
  private final Provider<ApiInterface> apiInterfaceProvider;

  public Repository_Factory(Provider<ApiInterface> apiInterfaceProvider) {
    this.apiInterfaceProvider = apiInterfaceProvider;
  }

  @Override
  public Repository get() {
    return newInstance(apiInterfaceProvider.get());
  }

  public static Repository_Factory create(Provider<ApiInterface> apiInterfaceProvider) {
    return new Repository_Factory(apiInterfaceProvider);
  }

  public static Repository newInstance(ApiInterface apiInterface) {
    return new Repository(apiInterface);
  }
}
