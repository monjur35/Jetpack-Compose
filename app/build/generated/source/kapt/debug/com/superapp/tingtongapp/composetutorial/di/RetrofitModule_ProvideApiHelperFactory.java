// Generated by Dagger (https://dagger.dev).
package com.superapp.tingtongapp.composetutorial.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitModule_ProvideApiHelperFactory implements Factory<ApiHelper> {
  private final Provider<ApiHelperImpl> apiHelperProvider;

  public RetrofitModule_ProvideApiHelperFactory(Provider<ApiHelperImpl> apiHelperProvider) {
    this.apiHelperProvider = apiHelperProvider;
  }

  @Override
  public ApiHelper get() {
    return provideApiHelper(apiHelperProvider.get());
  }

  public static RetrofitModule_ProvideApiHelperFactory create(
      Provider<ApiHelperImpl> apiHelperProvider) {
    return new RetrofitModule_ProvideApiHelperFactory(apiHelperProvider);
  }

  public static ApiHelper provideApiHelper(ApiHelperImpl apiHelper) {
    return Preconditions.checkNotNullFromProvides(RetrofitModule.INSTANCE.provideApiHelper(apiHelper));
  }
}
